@{
    ViewBag.Title = "WebGridTest";
}

<h2>WebGridTest</h2>

<p>
    Below two web grids will be rendered via Ajax. Both are backed by some randomly generated dynamic data.
    The difference is that the second one has columns (and simple formatting) defined for it before the getHtml function is called.
</p>
<p>
    (Look at the source of this page you can adjust the number of columns / rows to generate for each grid
    the column grid is not only blisteringly faster it scales better as well)
</p>
<p>Download from <a href="https://github.com/jamesk/MVCWebGridSpeedTest">https://github.com/jamesk/MVCWebGridSpeedTest</a></p>

<h3>Grid with no columns defined</h3>
<div id="noCols">
    Start:      <div class="startTime"></div>
    End  :      <div class="endTime"></div> 
    Duration :  <div class="duration"></div>

    <img src="@Url.Content("/Content/ajax-loader.gif")" />
    <div class="grid"></div>
</div>
<h3>Grid with columns (and formatting) defined</h3>
<div id="cols">
    Start:      <div class="startTime"></div>
    End  :      <div class="endTime"></div>
    Duration :  <div class="duration"></div>

    <img src="@Url.Content("/Content/ajax-loader.gif")" />
    <div class="grid"></div>
</div>


@section scripts {
    <script language="javascript" type="text/javascript">
        loadGrid("noCols", "@Url.Action("NoColumnsGrid")?totalColumns=30&totalRows=100");
        loadGrid("cols", "@Url.Action("ColumnsGrid")?totalColumns=30&totalRows=100");

        function loadGrid(divId, url)
        {
            var startTime = new Date();
            $("#" + divId + " .startTime").text(startTime.toGMTString());
            
            $("#" + divId + " .grid").load(url, function(event) 
            {
                $("#" + divId + " img").hide();

                var endTime = new Date();
                $("#" + divId + " .endTime").text(endTime.toGMTString());

                var duration = (endTime.getTime() - startTime.getTime()) / 1000
                $("#" + divId + " .duration").text(duration + "secs");
            });
        }
    </script>
}